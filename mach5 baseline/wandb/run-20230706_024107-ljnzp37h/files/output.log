use device: cuda:0
use device: cuda:0
data structure: [lines, timesteps, features]
train data size: [(122030, 120, 1)]
mytest data size: [(21356, 120, 1)]
Number of classes: 4
/root/ml/lib/python3.10/site-packages/torch/cuda/__init__.py:546: UserWarning: Can't initialize NVML
  warnings.warn("Can't initialize NVML")
  0%|                                                                                                           | 0/2 [00:00<?, ?it/s]
tensor([[ 9.5555e-01],
        [ 2.8058e-01],
        [-6.2501e-02],
        [ 8.4811e-01],
        [-5.5303e+00],
        [-1.1702e+00],
        [-1.5430e+00],
        [ 9.0798e-02],
        [-2.0076e+00],
        [ 2.9694e-01],
        [ 2.5885e-01],
        [ 3.6304e-01],
        [-4.6399e-01],
        [ 5.9204e-01],
        [ 5.7903e-01],
        [ 2.8896e+00],
        [ 6.4701e-01],
        [-3.5345e-01],
        [-1.8132e-01],
        [ 4.1376e-02],
        [ 7.1025e-01],
        [-1.5703e-01],
        [ 6.1751e-01],
        [ 1.1511e-01],
        [ 1.5294e-01],
        [ 1.7822e-01],
        [ 1.1384e+00],
        [ 4.1058e-01],
        [ 2.2869e-01],
        [ 3.2944e-02],
        [-1.1424e-01],
        [-4.3627e-01],
        [ 6.9661e-01],
        [ 2.6823e-01],
        [ 7.7366e-01],
        [ 1.0623e+00],
        [ 5.0166e-02],
        [ 9.0484e-02],
        [-7.3180e-01],
        [ 7.0330e-02],
        [-1.6963e-02],
        [ 8.4631e-02],
        [-3.4202e-03],
        [ 3.2528e-01],
        [ 6.1238e-02],
        [-7.8558e-02],
        [ 4.9966e-01],
        [ 1.4621e-01],
        [ 7.9600e-01],
        [-1.2880e-01],
        [-2.2862e-01],
        [ 3.7469e-01],
        [-1.2693e-01],
        [ 2.6097e-01],
        [-2.9026e-02],
        [ 8.4584e-01],
        [-1.0275e-01],
        [ 1.1084e-01],
        [ 3.6172e-01],
        [-4.8164e-01]], device='cuda:0')
tensor([[ 1.0115],
        [ 0.2684],
        [-0.0919],
        [ 0.9154],
        [-5.4778],
        [-1.2182],
        [-1.6133],
        [ 0.0762],
        [-2.0933],
        [ 0.2809],
        [ 0.2399],
        [ 0.3486],
        [-0.4946],
        [ 0.5935],
        [ 0.5794],
        [ 3.0220],
        [ 0.6421],
        [-0.3822],
        [-0.2073],
        [ 0.0218],
        [ 0.7229],
        [-0.1802],
        [ 0.6277],
        [ 0.1024],
        [ 0.1427],
        [ 0.1695],
        [ 1.1770],
        [ 0.4102],
        [ 0.2177],
        [ 0.0129],
        [-0.1390],
        [-0.4692],
        [ 0.7139],
        [ 0.2623],
        [ 0.7969],
        [ 1.1025],
        [ 0.0348],
        [ 0.0813],
        [-0.7704],
        [ 0.0615],
        [-0.0318],
        [ 0.0748],
        [-0.0185],
        [ 0.3280],
        [ 0.0481],
        [-0.0984],
        [ 0.5143],
        [ 0.1412],
        [ 0.8327],
        [-0.1512],
        [-0.2575],
        [ 0.3802],
        [-0.1512],
        [ 0.2604],
        [-0.0450],
        [ 0.8842],
        [-0.1244],
        [ 0.1008],
        [ 0.3697],
  0%|                                                                                                           | 0/2 [00:00<?, ?it/s]/root/DNNM/mach5 baseline/run.py:198: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  pre = torch.tensor(y_pre).cpu().detach().numpy()[0].squeeze()
/root/DNNM/mach5 baseline/run.py:199: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  act = torch.tensor(y).cpu().detach().numpy()[0].squeeze()
/root/ml/lib/python3.10/site-packages/torch/nn/modules/activation.py:1160: UserWarning: Converting mask without torch.bool dtype to bool; this will negatively affect performance. Prefer to use a boolean mask directly. (Triggered internally at ../aten/src/ATen/native/transformers/attention.cpp:150.)
  return torch._native_multi_head_attention(
/root/DNNM/mach5 baseline/run.py:237: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  pre = torch.tensor(y_pre).cpu().detach().numpy()[0].squeeze()
/root/DNNM/mach5 baseline/run.py:238: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  act = torch.tensor(y).cpu().detach().numpy()[0].squeeze()
  0%|                                                                                                           | 0/2 [09:21<?, ?it/s]
Traceback (most recent call last):
  File "/root/DNNM/mach5 baseline/run.py", line 272, in <module>
    train()
  File "/root/DNNM/mach5 baseline/run.py", line 215, in train
    test(dataloader=test_dataloader, net=net, loss_function=loss_function)
  File "/root/DNNM/mach5 baseline/run.py", line 230, in test
    for i, (x, y) in enumerate(dataloader):
  File "/root/ml/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 633, in __next__
    data = self._next_data()
  File "/root/ml/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 1345, in _next_data
    return self._process_data(data)
  File "/root/ml/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 1371, in _process_data
    data.reraise()
  File "/root/ml/lib/python3.10/site-packages/torch/_utils.py", line 644, in reraise
    raise exception
IndexError: Caught IndexError in DataLoader worker process 9.
Original Traceback (most recent call last):
  File "/root/ml/lib/python3.10/site-packages/torch/utils/data/_utils/worker.py", line 308, in _worker_loop
    data = fetcher.fetch(index)
  File "/root/ml/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/root/ml/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/root/DNNM/mach5 baseline/dataset_process/dataset_process.py", line 138, in __getitem__
    return self.valdata[index], self.vallabels[index]
IndexError: index 21356 is out of bounds for dimension 0 with size 21356